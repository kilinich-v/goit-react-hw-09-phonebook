{"version":3,"sources":["routes.js","views/HomeView.jsx","redux/user/user-actions.js","redux/user/user-reducer.js","redux/user/user-selectors.js","redux/user/user-operations.js","views/LoginView.jsx","views/RegisterView.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","components/AddContact/AddContact.jsx","redux/contacts/contacts-operations.js","components/Contacts/FindContacts.jsx","components/Contacts/ContactsList.jsx","components/Contacts/Contacts.jsx","views/PhonebookView.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/AppMenu/AppMenu.jsx","components/UserMenu/UserMenu.jsx","App.js","redux/store.js","index.js","components/AddContact/styles.module.scss","components/Contacts/styles.module.scss"],"names":["homeView","Typography","variant","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getUserRequest","getUserSuccess","getUserError","initialState","email","name","password","user","createReducer","_","payload","token","error","isAuth","userReducer","combineReducers","state","auth","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","post","responce","data","message","login","logout","getUser","getState","persistedToken","get","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","padding","margin","spacing","width","RegisterView","onSubmit","useDispatch","useState","setEmail","setPassword","reset","classes","className","noValidate","autoComplete","event","preventDefault","userOperations","TextField","label","type","value","onChange","target","Button","color","setName","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","items","filter","id","loading","contactsReducer","getFilter","contacts","getContacts","getLoading","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","number","includes","AddContact","setNumber","styles","form","evt","contact","then","catch","err","addContact","placeholder","pattern","title","required","input","button","FindContacts","useSelector","contactsSelectors","onInput","ContactsList","useEffect","map","onClick","delete","deleteContact","Contacts","Component","phonebookView","PrivateRoute","component","redirectTo","routeProps","userSelectors","render","props","to","PublicRoute","restricted","dropdownRoot","flexGrow","dropdown","position","top","right","left","zIndex","border","backgroundColor","palette","background","paper","marginRight","AppMenu","exact","routes","activeClassName","mapDispatchToProps","connect","menuButton","borderColor","fontFamily","App","open","setOpen","AppBar","Toolbar","IconButton","edge","aria-label","ClickAwayListener","onClickAway","prev","path","HomeView","LoginView","PhonebookView","userPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c211be76.chunk.js","sourcesContent":["/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  phonebook: '/phonebook',\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst homeView = () => {\r\n  return <Typography variant=\"h2\">This is the home page</Typography>;\r\n};\r\n\r\nexport default homeView;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('user/registerRequest');\r\nexport const registerSuccess = createAction('user/registerSuccess');\r\nexport const registerError = createAction('user/registerError');\r\n\r\nexport const loginRequest = createAction('user/loginRequest');\r\nexport const loginSuccess = createAction('user/loginSuccess');\r\nexport const loginError = createAction('user/loginError');\r\n\r\nexport const logoutRequest = createAction('user/logoutRequest');\r\nexport const logoutSuccess = createAction('user/logoutSuccess');\r\nexport const logoutError = createAction('user/logoutError');\r\n\r\nexport const getUserRequest = createAction('user/getUserRequest');\r\nexport const getUserSuccess = createAction('user/getUserSuccess');\r\nexport const getUserError = createAction('user/getUserError');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getUserSuccess,\r\n  getUserError,\r\n} from './user-actions';\r\n\r\nconst initialState = {\r\n  email: null,\r\n  name: null,\r\n  password: null,\r\n};\r\n\r\nconst user = createReducer(initialState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialState,\r\n  [getUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(false, {\r\n  [registerError]: () => (_, { payload }) => payload,\r\n  [loginError]: () => (_, { payload }) => payload,\r\n  [logoutError]: () => (_, { payload }) => payload,\r\n  [getUserError]: () => (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuth = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [getUserSuccess]: () => true,\r\n});\r\n\r\nconst userReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuth,\r\n});\r\n\r\nexport default userReducer;\r\n","const getAuthenticated = state => state.auth.isAuth;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getAuthenticated,\r\n  getUserName,\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n} from './user-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credential => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const responce = await axios.post('/users/signup', credential);\r\n\r\n    token.set(responce.data.token);\r\n    dispatch(registerSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst login = credential => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const responce = await axios.post('/users/login', credential);\r\n\r\n    token.set(responce.data.token);\r\n    dispatch(loginSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    const responce = await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getUserRequest());\r\n\r\n  try {\r\n    const responce = await axios.get('/users/current');\r\n\r\n    dispatch(getUserSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(getUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getUser,\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { userOperations } from '../redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RegisterView = ({ onSubmit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState();\r\n\r\n  const handleEmail = event => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const [password, setPassword] = useState();\r\n\r\n  const handlePass = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(userOperations.login(user));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <TextField\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        variant=\"outlined\"\r\n        value={email}\r\n        onChange={handleEmail}\r\n      />\r\n      <TextField\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"outlined\"\r\n        onChange={handlePass}\r\n        value={password}\r\n      />\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Login\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { userOperations } from '../redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RegisterView = ({ onSubmit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState();\r\n  const handleEmail = event => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const [name, setName] = useState();\r\n  const handleName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const [password, setPassword] = useState();\r\n  const handlePass = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email,\r\n      name,\r\n      password,\r\n    };\r\n\r\n    dispatch(userOperations.register(user));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setName('');\r\n    setPassword('');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <TextField\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        variant=\"outlined\"\r\n        value={email}\r\n        onChange={handleEmail}\r\n      />\r\n      <TextField\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n        onChange={handleName}\r\n        value={name}\r\n      />\r\n      <TextField\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"outlined\"\r\n        onChange={handlePass}\r\n        value={password}\r\n      />\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Sing up\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getRequest');\r\nexport const getContactsSuccess = createAction('contacts/getSuccess');\r\nexport const getContactsError = createAction('contacts/getError');\r\n\r\nexport const addContactRequest = createAction('contacts/addRequest');\r\nexport const addContactSuccess = createAction('contacts/addSuccess');\r\nexport const addContactError = createAction('contacts/addError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteError');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => [...payload],\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\nconst getContacts = state => state.contacts.items;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(\r\n      ({ name, number }) =>\r\n        name.toLowerCase().includes(normalizeFilter) ||\r\n        number.includes(contacts.filter),\r\n    );\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getFilter,\r\n  getContacts,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { addContact } from '../../redux/contacts';\r\n\r\nconst AddContact = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const handleName = evt => {\r\n    setName(evt.target.value);\r\n  };\r\n\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleNumber = evt => {\r\n    setNumber(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label}>\r\n        <span>Name</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"John Doe\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleName}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        <span>Number</span>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"+38...\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleNumber}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddContact;\r\n","import axios from 'axios';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nexport const getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n\r\n  return axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(err => dispatch(getContactsError(err)));\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(err => dispatch(addContactError(err)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(err => dispatch(deleteContactError(err)));\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { filterContact } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\n\r\nconst FindContacts = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n\r\n  const onChange = evt => {\r\n    dispatch(filterContact(evt.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"query\"\r\n        value={value}\r\n        required\r\n        onInput={onChange}\r\n        className={styles.input}\r\n        autoComplete=\"off\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindContacts;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { getContacts, deleteContact } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\n\r\nimport React from 'react';\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={styles.contacts}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={styles.contact}>\r\n            <span>{name}</span>\r\n            <span>{number}</span>\r\n            <button\r\n              className={styles.button}\r\n              onClick={() => dispatch(deleteContact(id))}\r\n            >\r\n              X\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import { Component } from 'react';\r\nimport FindContacts from './FindContacts';\r\nimport ContactsList from './ContactsList';\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <FindContacts />\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport AddContact from '../components/AddContact';\r\nimport Contacts from '../components/Contacts';\r\n\r\nconst phonebookView = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <div className=\"container\">\r\n        <AddContact />\r\n        <Contacts />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default phonebookView;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelectors } from '../redux/user';\r\n\r\nconst PrivateRoute = ({ component: Component, redirectTo, ...routeProps }) => {\r\n  const isAuth = useSelector(userSelectors.getAuthenticated);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuth ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelectors } from '../redux/user';\r\n\r\nconst PublicRoute = ({ component: Component, redirectTo, ...routeProps }) => {\r\n  const isAuth = useSelector(userSelectors.getAuthenticated);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuth && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport routes from '../../routes';\r\nimport { userSelectors } from '../../redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dropdownRoot: {\r\n    flexGrow: 1,\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    width: '125px',\r\n    top: 28,\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    border: '1px solid',\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AppMenu = () => {\r\n  const classes = useStyles();\r\n\r\n  const isAuth = useSelector(userSelectors.getAuthenticated);\r\n\r\n  return (\r\n    <div className={classes.dropdownRoot}>\r\n      <Typography variant=\"h6\">\r\n        <ul className={classes.dropdown}>\r\n          <li className=\"nav-list__item\">\r\n            <NavLink\r\n              exact\r\n              to={routes.home}\r\n              className=\"nav-list__link\"\r\n              activeClassName=\"nav-list__link--active\"\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          {isAuth ? (\r\n            <li className=\"nav-list__item\">\r\n              <NavLink\r\n                exact\r\n                to={routes.phonebook}\r\n                className=\"nav-list__link\"\r\n                activeClassName=\"nav-list__link--active\"\r\n              >\r\n                Phonebook\r\n              </NavLink>\r\n            </li>\r\n          ) : null}\r\n          {isAuth ? null : (\r\n            <li className=\"nav-list__item\">\r\n              <NavLink\r\n                exact\r\n                to={routes.register}\r\n                className=\"nav-list__link\"\r\n                activeClassName=\"nav-list__link--active\"\r\n              >\r\n                Registration\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n          {isAuth ? null : (\r\n            <li className=\"nav-list__item\">\r\n              <NavLink\r\n                exact\r\n                to={routes.login}\r\n                className=\"nav-list__link\"\r\n                activeClassName=\"nav-list__link--active\"\r\n              >\r\n                Login\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppMenu;\r\n","import { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { userSelectors, userOperations } from '../../redux/user';\r\n\r\nconst UserMenu = ({ name, onClick }) => {\r\n  return (\r\n    <div>\r\n      <span>Welcome, {name}</span>\r\n      <Button variant=\"outlined\" color=\"inherit\" onClick={onClick}>\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: userSelectors.getUserName(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onClick: userOperations.logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport { HomeView, LoginView, RegisterView, PhonebookView } from './views';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport AppMenu from './components/AppMenu';\r\nimport UserMenu from './components/UserMenu';\r\nimport { userSelectors, userOperations } from './redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: '#fff',\r\n    borderColor: '#fff',\r\n    fontFamily: 'inherit',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  const isAuth = useSelector(userSelectors.getAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(userOperations.getUser());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <ClickAwayListener onClickAway={handleClickAway}>\r\n              <div>\r\n                <MenuIcon onClick={handleClick} />\r\n                {open ? <AppMenu /> : null}\r\n              </div>\r\n            </ClickAwayListener>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Phonebook\r\n          </Typography>\r\n          {isAuth ? (\r\n            <UserMenu />\r\n          ) : (\r\n            <Typography variant=\"h6\">\r\n              <NavLink to={routes.login}>\r\n                <Button variant=\"outlined\" className={classes.menuButton}>\r\n                  Login\r\n                </Button>\r\n              </NavLink>\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Switch>\r\n        <Route exact path={routes.home} component={HomeView} />\r\n        <PublicRoute\r\n          restricted\r\n          path={routes.register}\r\n          component={RegisterView}\r\n          redirectTo={routes.phonebook}\r\n        />\r\n        <PublicRoute\r\n          restricted\r\n          path={routes.login}\r\n          component={LoginView}\r\n          redirectTo={routes.phonebook}\r\n        />\r\n        <PrivateRoute\r\n          path={routes.phonebook}\r\n          component={PhonebookView}\r\n          redirectTo={routes.login}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { userReducer } from './user';\r\n\r\nconst userPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(userPersistConfig, userReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <Provider store={store.store}>\r\n        <PersistGate loading={null} persistor={store.persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__AltCV\",\"label\":\"styles_label__2ex8h\",\"button\":\"styles_button__1bQpd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__iJyuk\",\"contacts\":\"styles_contacts__JkWlQ\",\"contact\":\"styles_contact__d9915\",\"button\":\"styles_button__1Bqr_\"};"],"sourceRoot":""}