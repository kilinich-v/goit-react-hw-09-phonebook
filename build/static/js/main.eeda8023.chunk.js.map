{"version":3,"sources":["routes.js","views/HomeView.jsx","redux/user/user-actions.js","redux/user/user-reducer.js","redux/user/user-selectors.js","redux/user/user-operations.js","views/LoginView.jsx","views/RegisterView.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","components/AddContact/AddContact.jsx","redux/contacts/contacts-operations.js","components/Contacts/FindContacts.jsx","components/Contacts/ContactsList.jsx","components/Contacts/Contacts.jsx","views/PhonebookView.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/AppMenu/AppMenu.jsx","components/UserMenu/UserMenu.jsx","App.js","redux/store.js","index.js","components/AddContact/styles.module.scss","components/Contacts/styles.module.scss"],"names":["homeView","Typography","variant","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getUserRequest","getUserSuccess","getUserError","initialState","email","name","password","user","createReducer","_","payload","token","error","isAuth","userReducer","combineReducers","state","auth","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","post","responce","data","message","login","logout","getUser","getState","persistedToken","get","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","padding","margin","spacing","width","mapDispatchToProps","onSubmit","userOperations","connect","useState","setEmail","setPassword","reset","classes","className","noValidate","autoComplete","event","preventDefault","TextField","label","type","value","onChange","target","Button","color","setName","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","items","filter","id","loading","contactsReducer","getFilter","contacts","getContacts","getLoading","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","number","includes","AddContact","handleChange","setState","handleSubmit","props","styles","form","this","placeholder","pattern","title","required","input","button","Component","contact","then","catch","err","addContact","FindContacts","onInput","contactsSelectors","ContactsList","onDelete","map","onClick","delete","deleteContact","Contacts","phonebookView","userSelectors","component","redirectTo","routeProps","render","to","restricted","dropdownRoot","flexGrow","dropdown","position","top","right","left","zIndex","border","backgroundColor","palette","background","paper","marginRight","exact","routes","activeClassName","menuButton","borderColor","fontFamily","open","setOpen","useEffect","AppBar","Toolbar","IconButton","edge","aria-label","ClickAwayListener","onClickAway","prev","path","HomeView","RegisterView","LoginView","PhonebookView","userPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.eeda8023.chunk.js","sourcesContent":["/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  phonebook: '/phonebook',\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst homeView = () => {\r\n  return <Typography variant=\"h2\">This is the home page</Typography>;\r\n};\r\n\r\nexport default homeView;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('user/registerRequest');\r\nexport const registerSuccess = createAction('user/registerSuccess');\r\nexport const registerError = createAction('user/registerError');\r\n\r\nexport const loginRequest = createAction('user/loginRequest');\r\nexport const loginSuccess = createAction('user/loginSuccess');\r\nexport const loginError = createAction('user/loginError');\r\n\r\nexport const logoutRequest = createAction('user/logoutRequest');\r\nexport const logoutSuccess = createAction('user/logoutSuccess');\r\nexport const logoutError = createAction('user/logoutError');\r\n\r\nexport const getUserRequest = createAction('user/getUserRequest');\r\nexport const getUserSuccess = createAction('user/getUserSuccess');\r\nexport const getUserError = createAction('user/getUserError');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getUserSuccess,\r\n  getUserError,\r\n} from './user-actions';\r\n\r\nconst initialState = {\r\n  email: null,\r\n  name: null,\r\n  password: null,\r\n};\r\n\r\nconst user = createReducer(initialState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialState,\r\n  [getUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(false, {\r\n  [registerError]: () => (_, { payload }) => payload,\r\n  [loginError]: () => (_, { payload }) => payload,\r\n  [logoutError]: () => (_, { payload }) => payload,\r\n  [getUserError]: () => (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuth = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [getUserSuccess]: () => true,\r\n});\r\n\r\nconst userReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuth,\r\n});\r\n\r\nexport default userReducer;\r\n","const getAuthenticated = state => state.auth.isAuth;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getAuthenticated,\r\n  getUserName,\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n} from './user-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credential => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const responce = await axios.post('/users/signup', credential);\r\n\r\n    token.set(responce.data.token);\r\n    dispatch(registerSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst login = credential => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const responce = await axios.post('/users/login', credential);\r\n\r\n    token.set(responce.data.token);\r\n    dispatch(loginSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    const responce = await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getUserRequest());\r\n\r\n  try {\r\n    const responce = await axios.get('/users/current');\r\n\r\n    dispatch(getUserSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(getUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getUser,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { userOperations } from '../redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RegisterView = ({ onSubmit }) => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleEmail = event => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const handlePass = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    onSubmit(user);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <TextField\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        variant=\"outlined\"\r\n        value={email}\r\n        onChange={handleEmail}\r\n      />\r\n      <TextField\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"outlined\"\r\n        onChange={handlePass}\r\n        value={password}\r\n      />\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Login\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: userOperations.login,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { userOperations } from '../redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RegisterView = ({ onSubmit }) => {\r\n  const [email, setEmail] = useState();\r\n  const [name, setName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleEmail = event => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const handleName = event => {\r\n    setName(event.target.value);\r\n  };\r\n  const handlePass = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email,\r\n      name,\r\n      password,\r\n    };\r\n\r\n    onSubmit(user);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setName('');\r\n    setPassword('');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <TextField\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        variant=\"outlined\"\r\n        value={email}\r\n        onChange={handleEmail}\r\n      />\r\n      <TextField\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n        onChange={handleName}\r\n        value={name}\r\n      />\r\n      <TextField\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"outlined\"\r\n        onChange={handlePass}\r\n        value={password}\r\n      />\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Sing up\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: userOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getRequest');\r\nexport const getContactsSuccess = createAction('contacts/getSuccess');\r\nexport const getContactsError = createAction('contacts/getError');\r\n\r\nexport const addContactRequest = createAction('contacts/addRequest');\r\nexport const addContactSuccess = createAction('contacts/addSuccess');\r\nexport const addContactError = createAction('contacts/addError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteError');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => [...payload],\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\nconst getContacts = state => state.contacts.items;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(\r\n      ({ name, number }) =>\r\n        name.toLowerCase().includes(normalizeFilter) ||\r\n        number.includes(contacts.filter),\r\n    );\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getFilter,\r\n  getContacts,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { addContact } from '../../redux/contacts';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"John Doe\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            placeholder=\"+38...\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContact);\r\n","import axios from 'axios';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nexport const getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n\r\n  return axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(err => dispatch(getContactsError(err)));\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(err => dispatch(addContactError(err)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(err => dispatch(deleteContactError(err)));\r\n};\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { filterContact } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\n\r\nexport class FindContacts extends Component {\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          value={value}\r\n          required\r\n          onInput={onChange}\r\n          className={styles.input}\r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target }) => dispatch(filterContact(target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContacts);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { getContacts, deleteContact } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\n\r\nexport class ContactsList extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, onDelete } = this.props;\r\n\r\n    return (\r\n      <ul className={styles.contacts}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id} className={styles.contact}>\r\n              <span>{name}</span>\r\n              <span>{number}</span>\r\n              <button className={styles.button} onClick={() => onDelete(id)}>\r\n                X\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(deleteContact(id)),\r\n  getContacts: () => dispatch(getContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { Component } from 'react';\r\nimport FindContacts from './FindContacts';\r\nimport ContactsList from './ContactsList';\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <FindContacts />\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport AddContact from '../components/AddContact';\r\nimport Contacts from '../components/Contacts';\r\n\r\nconst phonebookView = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <div className=\"container\">\r\n        <AddContact />\r\n        <Contacts />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default phonebookView;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { userSelectors } from '../redux/user';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuth,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuth ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: userSelectors.getAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { userSelectors } from '../redux/user';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuth,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuth && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: userSelectors.getAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport routes from '../../routes';\r\nimport { userSelectors } from '../../redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dropdownRoot: {\r\n    flexGrow: 1,\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    width: '125px',\r\n    top: 28,\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    border: '1px solid',\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AppMenu = ({ isAuth }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.dropdownRoot}>\r\n      <Typography variant=\"h6\">\r\n        <ul className={classes.dropdown}>\r\n          <li className=\"nav-list__item\">\r\n            <NavLink\r\n              exact\r\n              to={routes.home}\r\n              className=\"nav-list__link\"\r\n              activeClassName=\"nav-list__link--active\"\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          {isAuth ? (\r\n            <li className=\"nav-list__item\">\r\n              <NavLink\r\n                exact\r\n                to={routes.phonebook}\r\n                className=\"nav-list__link\"\r\n                activeClassName=\"nav-list__link--active\"\r\n              >\r\n                Phonebook\r\n              </NavLink>\r\n            </li>\r\n          ) : null}\r\n          {isAuth ? null : (\r\n            <li className=\"nav-list__item\">\r\n              <NavLink\r\n                exact\r\n                to={routes.register}\r\n                className=\"nav-list__link\"\r\n                activeClassName=\"nav-list__link--active\"\r\n              >\r\n                Registration\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n          {isAuth ? null : (\r\n            <li className=\"nav-list__item\">\r\n              <NavLink\r\n                exact\r\n                to={routes.login}\r\n                className=\"nav-list__link\"\r\n                activeClassName=\"nav-list__link--active\"\r\n              >\r\n                Login\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: userSelectors.getAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppMenu);\r\n","import { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { userSelectors, userOperations } from '../../redux/user';\r\n\r\nconst UserMenu = ({ name, onClick }) => {\r\n  return (\r\n    <div>\r\n      <span>Welcome, {name}</span>\r\n      <Button variant=\"outlined\" color=\"inherit\" onClick={onClick}>\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: userSelectors.getUserName(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onClick: userOperations.logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport { HomeView, LoginView, RegisterView, PhonebookView } from './views';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport AppMenu from './components/AppMenu';\r\nimport UserMenu from './components/UserMenu';\r\nimport { userSelectors, userOperations } from './redux/user';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: '#fff',\r\n    borderColor: '#fff',\r\n    fontFamily: 'inherit',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst App = ({ isAuth, getUser }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [getUser]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <ClickAwayListener onClickAway={handleClickAway}>\r\n              <div>\r\n                <MenuIcon onClick={handleClick} />\r\n                {open ? <AppMenu /> : null}\r\n              </div>\r\n            </ClickAwayListener>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Phonebook\r\n          </Typography>\r\n          {isAuth ? (\r\n            <UserMenu />\r\n          ) : (\r\n            <Typography variant=\"h6\">\r\n              <NavLink to={routes.login}>\r\n                <Button variant=\"outlined\" className={classes.menuButton}>\r\n                  Login\r\n                </Button>\r\n              </NavLink>\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Switch>\r\n        <Route exact path={routes.home} component={HomeView} />\r\n        <PublicRoute\r\n          restricted\r\n          path={routes.register}\r\n          component={RegisterView}\r\n          redirectTo={routes.phonebook}\r\n        />\r\n        <PublicRoute\r\n          restricted\r\n          path={routes.login}\r\n          component={LoginView}\r\n          redirectTo={routes.phonebook}\r\n        />\r\n        <PrivateRoute\r\n          path={routes.phonebook}\r\n          component={PhonebookView}\r\n          redirectTo={routes.login}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: userSelectors.getAuthenticated(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getUser: userOperations.getUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { userReducer } from './user';\r\n\r\nconst userPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(userPersistConfig, userReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <Provider store={store.store}>\r\n        <PersistGate loading={null} persistor={store.persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__2x_gR\",\"label\":\"styles_label__1JRf6\",\"button\":\"styles_button__3rbO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__3-nI_\",\"contacts\":\"styles_contacts__3ZAXm\",\"contact\":\"styles_contact__2PB9d\",\"button\":\"styles_button__1sEHx\"};"],"sourceRoot":""}